// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int      @id @default(autoincrement())
  email                  String   @unique
  firstName              String
  lastName               String
  phoneNumber            String?
  passwordResetToken     String?
  passwordHash           String
  isActive               Boolean  @default(false)
  accountActivationToken String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  profile                Profile?
}

model Profile {
  id           Int      @id @default(autoincrement())
  userName     String   @unique
  profileImage String?
  bio          String?
  profession   String?
  address      String?
  country      String?
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  posts            Post[]
  visitedCountries VisitedCountry[]
  visitedLocations VisitedLocation[]
  comments         Comment[]
  reaction         Reaction[]
  eventCreated     Event[]
  eventJoined      EventJoin[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String?
  image     String?
  author    Profile  @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments  Comment[]
  reactions Reaction[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    Profile  @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reaction {
  id           Int     @id @default(autoincrement())
  reactionType Int
  reactor      Profile @relation(fields: [reactorId], references: [id])
  reactorId    Int
  post         Post    @relation(fields: [postId], references: [id])
  postId       Int
}

model VisitedCountry {
  id           Int       @id @default(autoincrement())
  countryCode  String
  country      String
  visitDate    DateTime?
  descriptions String?
  image        String?
  visitor      Profile   @relation(fields: [visitorId], references: [id])
  visitorId    Int
}

model VisitedLocation {
  id           Int     @id @default(autoincrement())
  locationName String?
  Latitude     String?
  Longitude    String?
  description  String?
  image        String?
  visitor      Profile @relation(fields: [visitorId], references: [id])
  visitorId    Int
}

model Event {
  id             Int     @id @default(autoincrement())
  eventLocation  String
  eventStart     String?
  eventEnd       String?
  totalMembers   String?
  eventInfo      String?
  eventFee       String?
  eventCreator   Profile @relation(fields: [eventCreatorId], references: [id])
  eventCreatorId Int

  eventJoin EventJoin[]
}

model EventJoin {
  id      Int     @id @default(autoincrement())
  event   Event   @relation(fields: [eventId], references: [id])
  eventId Int
  guest   Profile @relation(fields: [guestId], references: [id])
  guestId Int
}
